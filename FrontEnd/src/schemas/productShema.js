import * as z from "zod";

// Schema cho 1 variant
const variantSchema = z.object({
  size: z.string().nonempty({ message: "Size kh√¥ng ƒë∆∞·ª£c b·ªè tr·ªëng" }).optional(),
  color: z
    .string()
    .nonempty({ message: "Color kh√¥ng ƒë∆∞·ª£c b·ªè tr·ªëng" })
    .optional(),
  price: z.number().positive({ message: "Gi√° variant ph·∫£i l√† s·ªë d∆∞∆°ng" }),
  stock: z
    .number()
    .int()
    .nonnegative({ message: "S·ªë l∆∞·ª£ng variant ph·∫£i l√† s·ªë nguy√™n kh√¥ng √¢m" }),
  sku: z.string().nonempty({ message: "SKU kh√¥ng ƒë∆∞·ª£c b·ªè tr·ªëng" }),
});

// Schema s·∫£n ph·∫©m bao g·ªìm variants
export const schemaProduct = z.object({
  title: z
    .string()
    .min(6, { message: "T√™n s·∫£n ph·∫©m t·ªëi thi·ªÉu 6 k√Ω t·ª±" })
    .trim(),
  basePrice: z.number().positive({ message: "Gi√° s·∫£n ph·∫©m ph·∫£i l√† s·ªë d∆∞∆°ng" }),

  description: z.string().optional(),
  thumbnail: z.any().optional(),
  categoryId: z.string().nonempty({ message: "Vui l√≤ng ch·ªçn m·ªôt danh m·ª•c" }),
  totalStock: z
    .number()
    .positive({ message: "S·ªë l∆∞·ª£ng t·ªìn kho ph·∫£i l√† s·ªë d∆∞∆°ng" }),

  // üî• S·ª≠a l·ªói: Th√™m variants v√†o schema
  variants: z.array(variantSchema).optional(),
});
