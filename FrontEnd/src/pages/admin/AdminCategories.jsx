import React, { useEffect, useState } from "react";
import {
  addCategory,
  deleteCategory,
  getAllCategory,
  updateCategory,
} from "./../../services/categoryServices";
import CategoryModal from "./CategoryModal";

const AdminCategories = () => {
  const [categories, setCategories] = useState([]);
  const [loading, setLoading] = useState(true);
  const [isAuthorized, setIsAuthorized] = useState(true);
  const [categoryTitle, setCategoryTitle] = useState("");
  const [editingCategory, setEditingCategory] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const user = JSON.parse(localStorage.getItem("user") || "{}");

  useEffect(() => {
    if (!user.role || user.role !== "admin") {
      setIsAuthorized(false);
      return;
    }
    fetchCategories();
  }, [user.role]);

  const fetchCategories = async () => {
    const data = await getAllCategory();
    setCategories(data.data);
    setLoading(false);
  };

  // M·ªü modal ƒë·ªÉ th√™m danh m·ª•c m·ªõi
  const handleAddCategory = () => {
    setCategoryTitle(""); // X√≥a n·ªôi dung ti√™u ƒë·ªÅ (v√¨ ƒëang th√™m m·ªõi)
    setEditingCategory(null); // ƒê·∫£m b·∫£o kh√¥ng c√≥ danh m·ª•c n√†o ƒëang ch·ªânh s·ª≠a
    setIsModalOpen(true); // Hi·ªÉn th·ªã modal
  };

  // M·ªü modal ƒë·ªÉ ch·ªânh s·ª≠a danh m·ª•c
  const handleEditCategory = (category) => {
    setCategoryTitle(category.title); // Hi·ªÉn th·ªã ti√™u ƒë·ªÅ c·ªßa danh m·ª•c c·∫ßn s·ª≠a
    setEditingCategory(category); // L∆∞u th√¥ng tin danh m·ª•c ƒëang ch·ªânh s·ª≠a
    setIsModalOpen(true); // Hi·ªÉn th·ªã modal
  };

  // L∆∞u danh m·ª•c m·ªõi ho·∫∑c c·∫≠p nh·∫≠t danh m·ª•c c≈©
  const handleSaveCategory = async () => {
    if (!categoryTitle.trim()) {
      alert("T√™n danh m·ª•c kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!"); // Ki·ªÉm tra n·∫øu ti√™u ƒë·ªÅ r·ªóng
      return;
    }

    if (editingCategory) {
      // N·∫øu ƒëang ch·ªânh s·ª≠a, g·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t danh m·ª•c c√≥ s·∫µn
      await updateCategory(editingCategory._id, { title: categoryTitle });
    } else {
      // N·∫øu kh√¥ng c√≥ danh m·ª•c ƒëang ch·ªânh s·ª≠a, t·∫°o danh m·ª•c m·ªõi
      await addCategory({ title: categoryTitle });
    }

    setIsModalOpen(false); // ƒê√≥ng modal sau khi l∆∞u
    fetchCategories(); // T·∫£i l·∫°i danh s√°ch danh m·ª•c sau khi c·∫≠p nh·∫≠t
  };

  const handleDeleteCategory = async (id) => {
    if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a?")) {
      await deleteCategory(id);
      fetchCategories();
    }
  };

  if (!isAuthorized) {
    return (
      <h2 style={{ textAlign: "center", color: "red", marginTop: "20px" }}>
        B·∫°n kh√¥ng c√≥ quy·ªÅn v√†o trang n√†y!
      </h2>
    );
  }

  if (loading)
    return <p style={{ textAlign: "center" }}>ƒêang t·∫£i d·ªØ li·ªáu...</p>;

  return (
    <div className="container">
      <h2
        style={{
          textAlign: "center",
          marginBottom: "20px",
          fontSize: "24px",
          fontWeight: "bold",
        }}
      >
        Qu·∫£n l√Ω danh m·ª•c
      </h2>

      <button
        onClick={handleAddCategory}
        style={{
          padding: "10px 15px",
          margin: "5px",
          borderRadius: "5px",
          cursor: "pointer",
          fontSize: "14px",
          border: "none",
          background: "#007bff",
          color: "white",
        }}
      >
        ‚ûï Th√™m danh m·ª•c
      </button>

      <table
        style={{ width: "100%", borderCollapse: "collapse", marginTop: "20px" }}
      >
        <thead>
          <tr>
            <th
              style={{
                border: "1px solid #ddd",
                padding: "10px",
                textAlign: "left",
                background: "#f8f9fa",
              }}
            >
              ID
            </th>
            <th
              style={{
                border: "1px solid #ddd",
                padding: "10px",
                textAlign: "left",
                background: "#f8f9fa",
              }}
            >
              T√™n danh m·ª•c
            </th>
            <th
              style={{
                border: "1px solid #ddd",
                padding: "10px",
                textAlign: "left",
                background: "#f8f9fa",
              }}
            >
              H√†nh ƒë·ªông
            </th>
          </tr>
        </thead>
        <tbody>
          {categories.map((category) => (
            <tr key={category._id}>
              <td style={{ border: "1px solid #ddd", padding: "10px" }}>
                {category._id}
              </td>
              <td style={{ border: "1px solid #ddd", padding: "10px" }}>
                {category.title}
              </td>
              <td
                style={{
                  border: "1px solid #ddd",
                  padding: "10px",
                  display: "flex",
                  gap: "10px",
                }}
              >
                <button
                  onClick={() => handleEditCategory(category)}
                  style={{
                    background: "#ffc107",
                    color: "white",
                    padding: "8px 12px",
                    borderRadius: "5px",
                    cursor: "pointer",
                    border: "none",
                  }}
                >
                  ‚úèÔ∏è S·ª≠a
                </button>
                <button
                  onClick={() => handleDeleteCategory(category._id)}
                  style={{
                    background: "#dc3545",
                    color: "white",
                    padding: "8px 12px",
                    borderRadius: "5px",
                    cursor: "pointer",
                    border: "none",
                  }}
                >
                  üóëÔ∏è X√≥a
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <CategoryModal
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
        onSave={handleSaveCategory}
        title={categoryTitle}
        setTitle={setCategoryTitle}
      />
    </div>
  );
};

export default AdminCategories;
